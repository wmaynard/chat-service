image: alpine:latest

variables:
  # KUBE_INGRESS_BASE_DOMAIN is the application deployment domain and should be set as a variable at the group or project level.
  KUBE_INGRESS_BASE_DOMAIN: nonprod.tower.cdrentertainment.com
  POSTGRES_ENABLED: "false"
  HELM_SCALE_EXTRA_ARGS: --set postgresql.enabled="false" 

  K8S_SECRET_GRAPHITE: "graphite.rumblegames.com:2003"
  K8S_SECRET_LOGGLY_URL: "https://logs-01.loggly.com/bulk/f91d5019-e31d-4955-812c-31891b64b8d9/tag/chat-service/"
  K8S_SECRET_RUMBLE_COMPONENT: "chat-service"
  K8S_SECRET_RUMBLE_CONFIG_SERVICE_URL: "https://config-service.cdrentertainment.com/"
  K8S_SECRET_RUMBLE_DEPLOYMENT: "107"
  K8S_SECRET_MONGODB_NAME: "player-service-107"
  K8S_SECRET_RUMBLE_PUBLISHING_PLAYER_URL: "https://publishing-j8.cdrentertainment.com/cs/player/show"
  K8S_SECRET_RUMBLE_TOKEN_VERIFICATION: "https://dev.services.tower.cdrentertainment.com/player/verify"
  K8S_SECRET_SLACK_ENDPOINT_POST_MESSAGE: "https://slack.com/api/chat.postMessage"
  K8S_SECRET_SLACK_MONITOR_CHANNEL: "C02CH2T6JQH"
  K8S_SECRET_SLACK_MONITOR_FREQUENCY_SECONDS: "300"
  K8S_SECRET_SLACK_REPORTS_CHANNEL: "C02CS2G9M4Y"
  K8S_SECRET_STICKY_CHECK_FREQUENCY_SECONDS: "30"
  K8S_SECRET_VERBOSE_LOGGING: "false"

# from gitlab project ci variables
  K8S_SECRET_SLACK_CHAT_TOKEN: "$SLACK_CHAT_TOKEN"
  K8S_SECRET_RUMBLE_KEY: "$RUMBLE_KEY"


  DOCKER_DRIVER: overlay2
  DEPLOY_TYPE: "kubernetes" # "kubernetes"

  ROLLOUT_RESOURCE_TYPE: deployment

  DOCKER_TLS_CERTDIR: ""  # https://gitlab.com/gitlab-org/gitlab-runner/issues/4501

stages:
  - app_build
  - build
  - deploy  # dummy stage to follow the template guidelines
  - dev
  - staging
  - production
  - performance
  - cleanup

build_app:
  stage: app_build
  image: mcr.microsoft.com/dotnet/sdk:5.0
  tags:
    - kubernetes
  script:
    - dotnet nuget add source --username eric.sheris --password $NUGET_PAT --store-password-in-clear-text --name github "https://gitlab.cdrentertainment.com/api/v4/projects/14/packages/nuget/index.json"
    - dotnet restore
    - dotnet build --no-restore --configuration Release
  artifacts:
    paths:
      - bin/Release/net5.0/*


build_image:
  stage: build
  allow_failure: false
  image:
    name: gcr.io/kaniko-project/executor:debug
    entrypoint: [""]
  script:
    - mkdir -p /kaniko/.docker
    - echo "{\"auths\":{\"$CI_REGISTRY\":{\"auth\":\"$(echo -n ${CI_REGISTRY_USER}:${CI_REGISTRY_PASSWORD} | base64)\"}}}" > /kaniko/.docker/config.json
    - /kaniko/executor --context $CI_PROJECT_DIR --dockerfile $CI_PROJECT_DIR/Dockerfile --destination $CI_REGISTRY_IMAGE/$CI_COMMIT_REF_SLUG:$CI_COMMIT_SHA
  rules:
    - if: '$BUILD_DISABLED'
      when: never
    - if: $DEPLOY_TYPE == "beanstalk"
      when: never
    - if: '$CI_COMMIT_TAG || $CI_COMMIT_BRANCH'
    - if: $DEPLOY_TYPE == "kubernetes"
      when: always
  needs:
    - job: build_app
      artifacts: true

include: 
  - '/.gitlab/deploy-eb.yaml'
  - '/.gitlab/deploy-k8s.yaml'
